name: BLUX CI

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]

jobs:
  test:
    name: Test and Validate
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.9'
        
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install pre-commit safety
        
    - name: Run pre-commit checks
      run: |
        pre-commit run --all-files
        
    - name: Validate configuration
      run: |
        python tools/config-validator.py --check
        
    - name: Security audit
      run: |
        ./tools/dependency-check.sh --quick
        
    - name: Health check
      run: |
        chmod +x scripts/*.sh
        ./scripts/health-check.sh --quick

  docs:
    name: Documentation Check
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Check documentation links
      run: |
        # Check for broken internal links
        find docs/ -name "*.md" -exec grep -l "(" {} \; | while read file; do
          echo "Checking links in: $file"
          grep -o '(.*)' "$file" || true
        done
        
    - name: Verify documentation structure
      run: |
        required_docs=("README.md" "ARCHITECTURE.md" "SECURITY_OVERVIEW.md")
        for doc in "${required_docs[@]}"; do
          if [ ! -f "$doc" ]; then
            echo "Missing required documentation: $doc"
            exit 1
          fi
        done

  release:
    name: Create Release
    runs-on: ubuntu-latest
    if: startsWith(github.ref, 'refs/tags/')
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Verify tag format
      run: |
        TAG=${GITHUB_REF#refs/tags/}
        if [[ ! $TAG =~ ^v[0-9]+\.[0-9]+\.[0-9]+(-[a-z]+)?$ ]]; then
          echo "Invalid tag format: $TAG"
          echo "Use format: v1.2.3 or v1.2.3-alpha"
          exit 1
        fi
        
    - name: Create release archive
      run: |
        VERSION=${GITHUB_REF#refs/tags/}
        tar czf blux-ecosystem-${VERSION}.tar.gz \
          --exclude='.git' \
          --exclude='node_modules' \
          --exclude='.venv' \
          .
          
    - name: Create GitHub Release
      uses: softprops/action-gh-release@v1
      with:
        files: blux-ecosystem-*.tar.gz
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}